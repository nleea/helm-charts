{{- $chartname := .Chart.Name -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ $chartname }}
  namespace: myapp1
  labels:
    app: nginx
  annotations: 
    # without quota function
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # With quota function
    app.kubernetes.io/managed-by: {{ quote .Release.Service }}
    #With pipeline function
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    # with pipelines i can add more function example: upper, there're many search in the documentation
    app.kubernetes.io/managed-by: {{ .Release.Service | quote | upper }}
    # with default function
    app.kubernetes.io/managed-by: {{ default "myrelease" .Values.releaseName | upper }}
    # Controlling Leading and Trailing White spaces 
    leading-whitespace: "   {{- .Chart.Name }}    kalyan"
    trailing-whitespace: "   {{ .Chart.Name -}}    kalyan"
    leadtrail-whitespace: "   {{- .Chart.Name -}}    kalyan"   
    # indent function
    indenttest: "  {{- .Chart.Name | indent 4 -}}  "
    # nindent function
    nindenttest: "  {{- .Chart.Name | nindent 10 -}}  " 

spec:
  selector: #permite seleccionar un conjunto de objetos que cumplan las condicione
    matchLabels:
      app: {{ $chartname }}
  
{{- /* 
  # replicas: {{ default 1 .Values.replicaCount }} # indica al controlador que ejecute N pods
  # see more about flow function on the documentation of helm
  # {{- if and .Values.myapp.retail.enabledfeatures ( eq .Values.myapp.env "prod") }}
  # replicas: 6
  # {{- if or .Values.myapp.retail.enabledfeatures (or (eq .Values.myapp.env "uta") (eq .Values.myapp.env "prod")) }}
  # replicas: 6
*/}}

  {{- if and .Values.myapp.retail.enabledfeatures (not (eq .Values.myapp.env "uta")) }}
  replicas: 6
  {{- else if eq .Values.myapp.env "prod" }}
  replicas: 4
  {{- else if eq .Values.myapp.env "dev" }}
  replicas: 3
  {{- else if eq .Values.myapp.env "qa" }}
  replicas: 2
  {{- else }}
  replicas: 1
  {{- end }} 

  template: # Plantilla que define los containers
    metadata:
      labels:
        app: {{ $chartname }}
    {{/*El with tiene su propio contexto es por lo que el '.' que esta dentro del with no corresponde al global, si no al del with
      que es lo que se encuentra dentro de podAnnotations

      Para acceder el contexto global dentro de un with se tiene que colocar '$.'
    */}}
    {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
        appManageBy: {{ $.Release.Service }}
        appHelmChart: {{ $chartname }}
    {{- end }}  
    spec:
      containers:
        - name: {{ $chartname }}-container
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 80
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
# en esta caso en el selector se le esta diciendo que busque todas aquellos contenedores que tengan un label nginx, ya que estos se van a crear en la parte de container
